{
  "address": "0x2E81345F9082619d900c0204D0913E904648c6E4",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_NFTContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_paymentContract",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "share",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "base",
          "type": "uint8"
        }
      ],
      "name": "MintNFTWithRoyalty",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "share",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "base",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "MintNFTWithRoyaltyPremit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        }
      ],
      "name": "MintNFTWithoutRoyalty",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "MintNFTWithoutRoyaltyPremit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newFees",
          "type": "uint256"
        }
      ],
      "name": "changeFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nFTContract",
          "type": "address"
        }
      ],
      "name": "changeNftContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_paymentContractAddress",
          "type": "address"
        }
      ],
      "name": "changePaymentContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "info",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xcd783b453cef90aa206a8d25c4ac05426670c32220c5c432d42523ed572614b4",
  "receipt": {
    "to": null,
    "from": "0x0F827B556771a6711dFC7d5DD342a744688a9CDb",
    "contractAddress": "0x2E81345F9082619d900c0204D0913E904648c6E4",
    "transactionIndex": 0,
    "gasUsed": "991905",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000018020000000000000000002000000000000000000000000000000020000800001000000000000000100000000000000000000020000000000200000000800000000000000000080000000000000400000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000010000000000000000024000000000010000000001000000000000000000000000000000100000000020000000000000000000000000000000000000000000000000000000000100100000",
    "blockHash": "0xe64da4e5c784e52c798d8efec56f7f538a63d8d55c549ce0f128d16b64b421c9",
    "transactionHash": "0xcd783b453cef90aa206a8d25c4ac05426670c32220c5c432d42523ed572614b4",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 17854822,
        "transactionHash": "0xcd783b453cef90aa206a8d25c4ac05426670c32220c5c432d42523ed572614b4",
        "address": "0x2E81345F9082619d900c0204D0913E904648c6E4",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000f827b556771a6711dfc7d5dd342a744688a9cdb"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xe64da4e5c784e52c798d8efec56f7f538a63d8d55c549ce0f128d16b64b421c9"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 17854822,
        "transactionHash": "0xcd783b453cef90aa206a8d25c4ac05426670c32220c5c432d42523ed572614b4",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000000f827b556771a6711dfc7d5dd342a744688a9cdb",
          "0x000000000000000000000000e4b8e9222704401ad16d4d826732953daf07c7e2"
        ],
        "data": "0x00000000000000000000000000000000000000000000000001a6dfe18d1cb0000000000000000000000000000000000000000000000000003b227c056198e00000000000000000000000000000000000000000000000000b9ac63ae1d308f338000000000000000000000000000000000000000000000000397b9c23d47c300000000000000000000000000000000000000000000000000b9c6d1ac36025a338",
        "logIndex": 1,
        "blockHash": "0xe64da4e5c784e52c798d8efec56f7f538a63d8d55c549ce0f128d16b64b421c9"
      }
    ],
    "blockNumber": 17854822,
    "cumulativeGasUsed": "991905",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xF16F269C61D69b7e4E5d6dFE58F3Ba6eddDc2c54",
    "0x3a7c0B90AF5DF1f149D22Bc8A69b59de1CafBE8C"
  ],
  "solcInputHash": "c43ab73aedbd503dda171840950295d2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_NFTContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_paymentContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"share\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"base\",\"type\":\"uint8\"}],\"name\":\"MintNFTWithRoyalty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"share\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"base\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"MintNFTWithRoyaltyPremit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"}],\"name\":\"MintNFTWithoutRoyalty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"MintNFTWithoutRoyaltyPremit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFees\",\"type\":\"uint256\"}],\"name\":\"changeFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nFTContract\",\"type\":\"address\"}],\"name\":\"changeNftContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_paymentContractAddress\",\"type\":\"address\"}],\"name\":\"changePaymentContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"info\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Eman Herawy, StartFi Team.\",\"kind\":\"dev\",\"methods\":{\"MintNFTWithRoyalty(address,string,uint8,uint8)\":{\"details\":\": tokens are transfered directly to the admin wallet . Called by the token issuer .\",\"params\":{\"_tokenURI\":\": serialized json object that has the following data ( category, name , desc , tages, ipfs hash).\",\"base\":\": eg. 10 .\",\"share\":\": eg. 25.\",\"to\":\": NFT issuer.\"},\"returns\":{\"_0\":\"token id .\"}},\"MintNFTWithRoyaltyPremit(address,string,uint8,uint8,uint256,uint8,bytes32,bytes32)\":{\"details\":\": tokens are transfered directly to the admin wallet . Called by the token issuer .\",\"params\":{\"_tokenURI\":\": serialized json object that has the following data ( category, name , desc , tages, ipfs hash).\",\"base\":\": eg. 10 .\",\"deadline\":\":  must be timestamp in future .\",\"r\":\": normal output of an ECDSA signature\",\"s\":\": normal output of an ECDSA signature `v`, `r` and `s` must be valid `secp256k1` signature from `owner`  or 'approved for all' account over EIP712-formatted function arguments.\",\"share\":\": eg. 25.\",\"to\":\": NFT issuer.\",\"v\":\"needed to recover the public key\"},\"returns\":{\"_0\":\"token id .\"}},\"MintNFTWithoutRoyalty(address,string)\":{\"details\":\": tokens are transfered directly to the admin wallet. Called by the token issuer .\",\"params\":{\"_tokenURI\":\": serialized json object that has the following data ( category, name , desc , tages, ipfs hash).\",\"to\":\": NFT issuer.\"},\"returns\":{\"_0\":\"token id .\"}},\"MintNFTWithoutRoyaltyPremit(address,string,uint256,uint8,bytes32,bytes32)\":{\"details\":\": tokens are transfered directly to the admin wallet. Called by the token issuer .\",\"params\":{\"_tokenURI\":\": serialized json object that has the following data ( category, name , desc , tages, ipfs hash).\",\"deadline\":\":  must be timestamp in future .\",\"r\":\": normal output of an ECDSA signature\",\"s\":\": normal output of an ECDSA signature `v`, `r` and `s` must be valid `secp256k1` signature from `owner`  or 'approved for all' account over EIP712-formatted function arguments.\",\"to\":\": NFT issuer.\",\"v\":\"needed to recover the public key\"},\"returns\":{\"_0\":\"token id .\"}},\"changeFees(uint256)\":{\"params\":{\"newFees\":\": integer number represents the new fees.\"}},\"changeNftContract(address)\":{\"details\":\"for later on upgrade , if we have.\",\"params\":{\"_nFTContract\":\": startfi new NFT contract.\"}},\"changePaymentContract(address)\":{\"details\":\"for later on upgrade , if we have\",\"params\":{\"_paymentContractAddress\":\": startfi new utility contract\"}},\"info()\":{\"details\":\":  function to get all the public info about the contract.\",\"returns\":{\"_0\":\"NFT token address, utility token address, minting fees.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"StartFi NFT Payment contract. [ desc ] : contract to handle minting NFT after the contract is approved to transfer the fees by STFI.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"MintNFTWithRoyalty(address,string,uint8,uint8)\":{\"notice\":\"caller should approve the contract to transfer the fees first.\"},\"MintNFTWithRoyaltyPremit(address,string,uint8,uint8,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"caller should sing a message to premit the contract to transfer the fees .\"},\"MintNFTWithoutRoyalty(address,string)\":{\"notice\":\"caller should approve the contract to transfer the fees first.\"},\"MintNFTWithoutRoyaltyPremit(address,string,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"caller should approve the contract to transfer the fees first.\"},\"changeFees(uint256)\":{\"notice\":\"only called by admin wallet.\"},\"changeNftContract(address)\":{\"notice\":\"only called by admin wallet.\"},\"changePaymentContract(address)\":{\"notice\":\"only called by admin wallet\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StartFiNFTPayment.sol\":\"StartFiNFTPayment\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.7;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0xa909b5568d2d26a6616c4b360ef714aab7f32eeb15c8a487071d1801b83319cf\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.7;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x6ccfa9bfe7d858830b660bd5f9d51252bec003f93b58f269ba3046b58ad458b0\",\"license\":\"MIT\"},\"contracts/StartFiNFTPayment.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\n\\npragma solidity 0.8.7;\\nimport './interface/IERC20.sol';\\nimport '@openzeppelin/contracts/access/Ownable.sol';\\nimport './interface/IERC721RoyaltyMinter.sol';\\n\\n/**\\n * @author Eman Herawy, StartFi Team.\\n *@title  StartFi NFT Payment contract.\\n * [ desc ] : contract to handle minting NFT after the contract is approved to transfer the fees by STFI.\\n */\\ncontract StartFiNFTPayment is Ownable {\\n    /******************************************* decalrations go here ********************************************************* */\\n    uint256 _fees = 5;\\n    address private _NFTToken;\\n    address private _paymentToken;\\n\\n    /******************************************* constructor goes here ********************************************************* */\\n\\n    constructor(address _NFTContract, address _paymentContract) {\\n        _NFTToken = _NFTContract;\\n        _paymentToken = _paymentContract;\\n    }\\n\\n    /******************************************* read state functions go here ********************************************************* */\\n\\n    /**\\n     * @dev :wrap function to get the total allowed number of tokens that this contract can transfer from the given account .\\n\\n    * @param owner: owner address.\\n    * @return allowed number of tokens that this contract can transfer from the owner account.\\n     */\\n    function _getAllowance(address owner) private view returns (uint256) {\\n        return IERC20(_paymentToken).allowance(owner, address(this));\\n    }\\n\\n    /**\\n     * @dev :  function to get all the public info about the contract.\\n     * @return NFT token address, utility token address, minting fees.\\n     */\\n    function info()\\n        external\\n        view\\n        returns (\\n            address,\\n            address,\\n            uint256\\n        )\\n    {\\n        return (_NFTToken, _paymentToken, _fees);\\n    }\\n\\n    /******************************************* state functions go here ********************************************************* */\\n\\n    /**\\n     * @notice  caller should approve the contract to transfer the fees first.\\n     * @dev : tokens are transfered directly to the admin wallet . Called by the token issuer .\\n     * @param to: NFT issuer.\\n     * @param _tokenURI: serialized json object that has the following data ( category, name , desc , tages, ipfs hash).\\n     * @param share: eg. 25.\\n     * @param base: eg. 10 .\\n     * @return token id .\\n     */\\n    function MintNFTWithRoyalty(\\n        address to,\\n        string memory _tokenURI,\\n        uint8 share,\\n        uint8 base\\n    ) external returns (uint256) {\\n        require(_getAllowance(_msgSender()) >= _fees, 'Not enough fees paid');\\n        IERC20(_paymentToken).transferFrom(_msgSender(), owner(), _fees);\\n        return IERC721RoyaltyMinter(_NFTToken).mintWithRoyalty(to, _tokenURI, share, base);\\n    }\\n\\n    /**\\n     * @notice  caller should sing a message to premit the contract to transfer the fees .\\n     * @dev : tokens are transfered directly to the admin wallet . Called by the token issuer .\\n     * @param to: NFT issuer.\\n     * @param _tokenURI: serialized json object that has the following data ( category, name , desc , tages, ipfs hash).\\n     * @param share: eg. 25.\\n     * @param base: eg. 10 .\\n     * @param deadline:  must be timestamp in future .\\n     * @param v needed to recover the public key\\n     * @param r : normal output of an ECDSA signature\\n     * @param s: normal output of an ECDSA signature\\n     * `v`, `r` and `s` must be valid `secp256k1` signature from `owner`  or 'approved for all' account over EIP712-formatted function arguments.\\n     * @return token id .\\n     */\\n    function MintNFTWithRoyaltyPremit(\\n        address to,\\n        string memory _tokenURI,\\n        uint8 share,\\n        uint8 base,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256) {\\n        IERC20(_paymentToken).permit(_msgSender(), address(this), _fees, deadline, v, r, s);\\n        require(_getAllowance(_msgSender()) >= _fees, 'Not enough fees paid');\\n        IERC20(_paymentToken).transferFrom(_msgSender(), owner(), _fees);\\n        return IERC721RoyaltyMinter(_NFTToken).mintWithRoyalty(to, _tokenURI, share, base);\\n    }\\n\\n    /**\\n     * @notice  caller should approve the contract to transfer the fees first.\\n     * @dev : tokens are transfered directly to the admin wallet. Called by the token issuer .\\n     * @param to: NFT issuer.\\n     * @param _tokenURI: serialized json object that has the following data ( category, name , desc , tages, ipfs hash).\\n     * @return token id .\\n     */\\n    function MintNFTWithoutRoyalty(address to, string memory _tokenURI) external returns (uint256) {\\n        require(_getAllowance(_msgSender()) >= _fees, 'Not enough fees paid');\\n        IERC20(_paymentToken).transferFrom(_msgSender(), owner(), _fees);\\n        return IERC721RoyaltyMinter(_NFTToken).mint(to, _tokenURI);\\n    }\\n\\n    /**\\n     * @notice  caller should approve the contract to transfer the fees first.\\n     * @dev : tokens are transfered directly to the admin wallet. Called by the token issuer .\\n     * @param to: NFT issuer.\\n     * @param _tokenURI: serialized json object that has the following data ( category, name , desc , tages, ipfs hash).\\n     * @param deadline:  must be timestamp in future .\\n     * @param v needed to recover the public key\\n     * @param r : normal output of an ECDSA signature\\n     * @param s: normal output of an ECDSA signature\\n     * `v`, `r` and `s` must be valid `secp256k1` signature from `owner`  or 'approved for all' account over EIP712-formatted function arguments.\\n     * @return token id .\\n     */\\n    function MintNFTWithoutRoyaltyPremit(\\n        address to,\\n        string memory _tokenURI,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (uint256) {\\n        IERC20(_paymentToken).permit(_msgSender(), address(this), _fees, deadline, v, r, s);\\n        require(_getAllowance(_msgSender()) >= _fees, 'Not enough fees paid');\\n        IERC20(_paymentToken).transferFrom(_msgSender(), owner(), _fees);\\n        return IERC721RoyaltyMinter(_NFTToken).mint(to, _tokenURI);\\n    }\\n\\n    /**\\n     * @notice  only called by admin wallet.\\n     * @param newFees : integer number represents the new fees.\\n     */\\n    function changeFees(uint256 newFees) external onlyOwner {\\n        // fees is a value between 1-3 %\\n        _fees = newFees;\\n    }\\n\\n    /**\\n     * @notice  only called by admin wallet.\\n     * @dev for later on upgrade , if we have.\\n     * @param _nFTContract : startfi new NFT contract.\\n     */\\n    function changeNftContract(address _nFTContract) external onlyOwner {\\n        _NFTToken = _nFTContract;\\n    }\\n\\n    /**\\n     * @notice  only called by admin wallet\\n     * @dev for later on upgrade , if we have\\n     * @param _paymentContractAddress : startfi new utility contract\\n     */\\n    function changePaymentContract(address _paymentContractAddress) external onlyOwner {\\n        _paymentToken = _paymentContractAddress;\\n    }\\n}\\n\",\"keccak256\":\"0x18600d443c8520d4299fcddc0b1a95e84f947371a139e069f3c75422a9e3a97a\",\"license\":\"AGPL-3.0-or-later\"},\"contracts/interface/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity 0.8.7;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    function totalSupply() external view returns (uint256);\\n\\n    function decimals() external view returns (uint8);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    function permit(\\n        address target,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    function transferWithPermit(\\n        address target,\\n        address to,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external returns (bool);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xe12c92d6b259afef82fea64c656326c5eb19ff7dd1d544be867334edb7acda14\",\"license\":\"GPL-3.0-or-later\"},\"contracts/interface/IERC721RoyaltyMinter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.7;\\n\\ninterface IERC721RoyaltyMinter {\\n    function mint(address to, string memory _tokenURI) external returns (uint256);\\n\\n    function mintWithRoyalty(\\n        address to,\\n        string memory _tokenURI,\\n        uint8 share,\\n        uint8 base\\n    ) external returns (uint256);\\n}\\n\",\"keccak256\":\"0xa4c039d0e439ef5a7992ed7b1b7a4b8c4f9f2f9bc5b57fac9fdcaf08596d9cbc\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052600560015534801561001557600080fd5b5060405161104a38038061104a833981016040819052610034916100c2565b600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600280546001600160a01b039384166001600160a01b031991821617909155600380549290931691161790556100f5565b80516001600160a01b03811681146100bd57600080fd5b919050565b600080604083850312156100d557600080fd5b6100de836100a6565b91506100ec602084016100a6565b90509250929050565b610f46806101046000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063715018a611610071578063715018a6146101375780638606e6041461013f5780638da5cb5b14610152578063a3db17441461016d578063ba1ebf0b14610180578063f2fde38b1461019357600080fd5b8063370158ea146100ae578063489d2104146100db5780634f43eee4146100f0578063545cf649146101115780636cda375b14610124575b600080fd5b6002546003546001546040516100d2936001600160a01b0390811693169190610dc7565b60405180910390f35b6100ee6100e9366004610b37565b6101a6565b005b6101036100fe366004610b52565b6101fb565b6040519081526020016100d2565b61010361011f366004610c89565b61034a565b6100ee610132366004610d48565b61050d565b6100ee61053c565b6100ee61014d366004610b37565b6105b0565b6000546040516001600160a01b0390911681526020016100d2565b61010361017b366004610c1a565b6105fc565b61010361018e366004610ba0565b61074c565b6100ee6101a1366004610b37565b610909565b6000546001600160a01b031633146101d95760405162461bcd60e51b81526004016101d090610ec5565b60405180910390fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600060015461020f61020a3390565b6109f3565b101561022d5760405162461bcd60e51b81526004016101d090610e97565b6003546001600160a01b03166323b872dd336000546001600160a01b03166001546040518463ffffffff1660e01b815260040161026c93929190610dc7565b602060405180830381600087803b15801561028657600080fd5b505af115801561029a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102be9190610d26565b5060025460405163d0def52160e01b81526001600160a01b039091169063d0def521906102f19086908690600401610e2c565b602060405180830381600087803b15801561030b57600080fd5b505af115801561031f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103439190610d61565b9392505050565b60035460015460405163d505accf60e01b81526000926001600160a01b03169163d505accf916103899133913091908b908b908b908b90600401610deb565b600060405180830381600087803b1580156103a357600080fd5b505af11580156103b7573d6000803e3d6000fd5b505050506001546103c861020a3390565b10156103e65760405162461bcd60e51b81526004016101d090610e97565b6003546001600160a01b03166323b872dd336000546001600160a01b03166001546040518463ffffffff1660e01b815260040161042593929190610dc7565b602060405180830381600087803b15801561043f57600080fd5b505af1158015610453573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104779190610d26565b50600254604051631a1752ab60e31b81526001600160a01b039091169063d0ba9558906104ae908c908c908c908c90600401610e58565b602060405180830381600087803b1580156104c857600080fd5b505af11580156104dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105009190610d61565b9998505050505050505050565b6000546001600160a01b031633146105375760405162461bcd60e51b81526004016101d090610ec5565b600155565b6000546001600160a01b031633146105665760405162461bcd60e51b81526004016101d090610ec5565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105da5760405162461bcd60e51b81526004016101d090610ec5565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600060015461060b61020a3390565b10156106295760405162461bcd60e51b81526004016101d090610e97565b6003546001600160a01b03166323b872dd336000546001600160a01b03166001546040518463ffffffff1660e01b815260040161066893929190610dc7565b602060405180830381600087803b15801561068257600080fd5b505af1158015610696573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ba9190610d26565b50600254604051631a1752ab60e31b81526001600160a01b039091169063d0ba9558906106f1908890889088908890600401610e58565b602060405180830381600087803b15801561070b57600080fd5b505af115801561071f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107439190610d61565b95945050505050565b60035460015460405163d505accf60e01b81526000926001600160a01b03169163d505accf9161078b9133913091908b908b908b908b90600401610deb565b600060405180830381600087803b1580156107a557600080fd5b505af11580156107b9573d6000803e3d6000fd5b505050506001546107ca61020a3390565b10156107e85760405162461bcd60e51b81526004016101d090610e97565b6003546001600160a01b03166323b872dd336000546001600160a01b03166001546040518463ffffffff1660e01b815260040161082793929190610dc7565b602060405180830381600087803b15801561084157600080fd5b505af1158015610855573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108799190610d26565b5060025460405163d0def52160e01b81526001600160a01b039091169063d0def521906108ac908a908a90600401610e2c565b602060405180830381600087803b1580156108c657600080fd5b505af11580156108da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fe9190610d61565b979650505050505050565b6000546001600160a01b031633146109335760405162461bcd60e51b81526004016101d090610ec5565b6001600160a01b0381166109985760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101d0565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600354604051636eb1769f60e11b81526001600160a01b038381166004830152306024830152600092169063dd62ed3e9060440160206040518083038186803b158015610a3f57600080fd5b505afa158015610a53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a779190610d61565b92915050565b80356001600160a01b0381168114610a9457600080fd5b919050565b600082601f830112610aaa57600080fd5b813567ffffffffffffffff80821115610ac557610ac5610efa565b604051601f8301601f19908116603f01168101908282118183101715610aed57610aed610efa565b81604052838152866020858801011115610b0657600080fd5b836020870160208301376000602085830101528094505050505092915050565b803560ff81168114610a9457600080fd5b600060208284031215610b4957600080fd5b61034382610a7d565b60008060408385031215610b6557600080fd5b610b6e83610a7d565b9150602083013567ffffffffffffffff811115610b8a57600080fd5b610b9685828601610a99565b9150509250929050565b60008060008060008060c08789031215610bb957600080fd5b610bc287610a7d565b9550602087013567ffffffffffffffff811115610bde57600080fd5b610bea89828a01610a99565b95505060408701359350610c0060608801610b26565b92506080870135915060a087013590509295509295509295565b60008060008060808587031215610c3057600080fd5b610c3985610a7d565b9350602085013567ffffffffffffffff811115610c5557600080fd5b610c6187828801610a99565b935050610c7060408601610b26565b9150610c7e60608601610b26565b905092959194509250565b600080600080600080600080610100898b031215610ca657600080fd5b610caf89610a7d565b9750602089013567ffffffffffffffff811115610ccb57600080fd5b610cd78b828c01610a99565b975050610ce660408a01610b26565b9550610cf460608a01610b26565b945060808901359350610d0960a08a01610b26565b925060c0890135915060e089013590509295985092959890939650565b600060208284031215610d3857600080fd5b8151801515811461034357600080fd5b600060208284031215610d5a57600080fd5b5035919050565b600060208284031215610d7357600080fd5b5051919050565b6000815180845260005b81811015610da057602081850181015186830182015201610d84565b81811115610db2576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b6001600160a01b0383168152604060208201819052600090610e5090830184610d7a565b949350505050565b6001600160a01b0385168152608060208201819052600090610e7c90830186610d7a565b60ff9485166040840152929093166060909101529392505050565b602080825260149082015273139bdd08195b9bdd59da081999595cc81c185a5960621b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fdfea26469706673582212200de347f02787091d5143b7f4e3d487e78e6f6c2e3efd656f154c7897386cdcc764736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c8063715018a611610071578063715018a6146101375780638606e6041461013f5780638da5cb5b14610152578063a3db17441461016d578063ba1ebf0b14610180578063f2fde38b1461019357600080fd5b8063370158ea146100ae578063489d2104146100db5780634f43eee4146100f0578063545cf649146101115780636cda375b14610124575b600080fd5b6002546003546001546040516100d2936001600160a01b0390811693169190610dc7565b60405180910390f35b6100ee6100e9366004610b37565b6101a6565b005b6101036100fe366004610b52565b6101fb565b6040519081526020016100d2565b61010361011f366004610c89565b61034a565b6100ee610132366004610d48565b61050d565b6100ee61053c565b6100ee61014d366004610b37565b6105b0565b6000546040516001600160a01b0390911681526020016100d2565b61010361017b366004610c1a565b6105fc565b61010361018e366004610ba0565b61074c565b6100ee6101a1366004610b37565b610909565b6000546001600160a01b031633146101d95760405162461bcd60e51b81526004016101d090610ec5565b60405180910390fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600060015461020f61020a3390565b6109f3565b101561022d5760405162461bcd60e51b81526004016101d090610e97565b6003546001600160a01b03166323b872dd336000546001600160a01b03166001546040518463ffffffff1660e01b815260040161026c93929190610dc7565b602060405180830381600087803b15801561028657600080fd5b505af115801561029a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102be9190610d26565b5060025460405163d0def52160e01b81526001600160a01b039091169063d0def521906102f19086908690600401610e2c565b602060405180830381600087803b15801561030b57600080fd5b505af115801561031f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103439190610d61565b9392505050565b60035460015460405163d505accf60e01b81526000926001600160a01b03169163d505accf916103899133913091908b908b908b908b90600401610deb565b600060405180830381600087803b1580156103a357600080fd5b505af11580156103b7573d6000803e3d6000fd5b505050506001546103c861020a3390565b10156103e65760405162461bcd60e51b81526004016101d090610e97565b6003546001600160a01b03166323b872dd336000546001600160a01b03166001546040518463ffffffff1660e01b815260040161042593929190610dc7565b602060405180830381600087803b15801561043f57600080fd5b505af1158015610453573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104779190610d26565b50600254604051631a1752ab60e31b81526001600160a01b039091169063d0ba9558906104ae908c908c908c908c90600401610e58565b602060405180830381600087803b1580156104c857600080fd5b505af11580156104dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105009190610d61565b9998505050505050505050565b6000546001600160a01b031633146105375760405162461bcd60e51b81526004016101d090610ec5565b600155565b6000546001600160a01b031633146105665760405162461bcd60e51b81526004016101d090610ec5565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146105da5760405162461bcd60e51b81526004016101d090610ec5565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600060015461060b61020a3390565b10156106295760405162461bcd60e51b81526004016101d090610e97565b6003546001600160a01b03166323b872dd336000546001600160a01b03166001546040518463ffffffff1660e01b815260040161066893929190610dc7565b602060405180830381600087803b15801561068257600080fd5b505af1158015610696573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ba9190610d26565b50600254604051631a1752ab60e31b81526001600160a01b039091169063d0ba9558906106f1908890889088908890600401610e58565b602060405180830381600087803b15801561070b57600080fd5b505af115801561071f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107439190610d61565b95945050505050565b60035460015460405163d505accf60e01b81526000926001600160a01b03169163d505accf9161078b9133913091908b908b908b908b90600401610deb565b600060405180830381600087803b1580156107a557600080fd5b505af11580156107b9573d6000803e3d6000fd5b505050506001546107ca61020a3390565b10156107e85760405162461bcd60e51b81526004016101d090610e97565b6003546001600160a01b03166323b872dd336000546001600160a01b03166001546040518463ffffffff1660e01b815260040161082793929190610dc7565b602060405180830381600087803b15801561084157600080fd5b505af1158015610855573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108799190610d26565b5060025460405163d0def52160e01b81526001600160a01b039091169063d0def521906108ac908a908a90600401610e2c565b602060405180830381600087803b1580156108c657600080fd5b505af11580156108da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fe9190610d61565b979650505050505050565b6000546001600160a01b031633146109335760405162461bcd60e51b81526004016101d090610ec5565b6001600160a01b0381166109985760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101d0565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600354604051636eb1769f60e11b81526001600160a01b038381166004830152306024830152600092169063dd62ed3e9060440160206040518083038186803b158015610a3f57600080fd5b505afa158015610a53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a779190610d61565b92915050565b80356001600160a01b0381168114610a9457600080fd5b919050565b600082601f830112610aaa57600080fd5b813567ffffffffffffffff80821115610ac557610ac5610efa565b604051601f8301601f19908116603f01168101908282118183101715610aed57610aed610efa565b81604052838152866020858801011115610b0657600080fd5b836020870160208301376000602085830101528094505050505092915050565b803560ff81168114610a9457600080fd5b600060208284031215610b4957600080fd5b61034382610a7d565b60008060408385031215610b6557600080fd5b610b6e83610a7d565b9150602083013567ffffffffffffffff811115610b8a57600080fd5b610b9685828601610a99565b9150509250929050565b60008060008060008060c08789031215610bb957600080fd5b610bc287610a7d565b9550602087013567ffffffffffffffff811115610bde57600080fd5b610bea89828a01610a99565b95505060408701359350610c0060608801610b26565b92506080870135915060a087013590509295509295509295565b60008060008060808587031215610c3057600080fd5b610c3985610a7d565b9350602085013567ffffffffffffffff811115610c5557600080fd5b610c6187828801610a99565b935050610c7060408601610b26565b9150610c7e60608601610b26565b905092959194509250565b600080600080600080600080610100898b031215610ca657600080fd5b610caf89610a7d565b9750602089013567ffffffffffffffff811115610ccb57600080fd5b610cd78b828c01610a99565b975050610ce660408a01610b26565b9550610cf460608a01610b26565b945060808901359350610d0960a08a01610b26565b925060c0890135915060e089013590509295985092959890939650565b600060208284031215610d3857600080fd5b8151801515811461034357600080fd5b600060208284031215610d5a57600080fd5b5035919050565b600060208284031215610d7357600080fd5b5051919050565b6000815180845260005b81811015610da057602081850181015186830182015201610d84565b81811115610db2576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b6001600160a01b0383168152604060208201819052600090610e5090830184610d7a565b949350505050565b6001600160a01b0385168152608060208201819052600090610e7c90830186610d7a565b60ff9485166040840152929093166060909101529392505050565b602080825260149082015273139bdd08195b9bdd59da081999595cc81c185a5960621b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fdfea26469706673582212200de347f02787091d5143b7f4e3d487e78e6f6c2e3efd656f154c7897386cdcc764736f6c63430008070033",
  "devdoc": {
    "author": "Eman Herawy, StartFi Team.",
    "kind": "dev",
    "methods": {
      "MintNFTWithRoyalty(address,string,uint8,uint8)": {
        "details": ": tokens are transfered directly to the admin wallet . Called by the token issuer .",
        "params": {
          "_tokenURI": ": serialized json object that has the following data ( category, name , desc , tages, ipfs hash).",
          "base": ": eg. 10 .",
          "share": ": eg. 25.",
          "to": ": NFT issuer."
        },
        "returns": {
          "_0": "token id ."
        }
      },
      "MintNFTWithRoyaltyPremit(address,string,uint8,uint8,uint256,uint8,bytes32,bytes32)": {
        "details": ": tokens are transfered directly to the admin wallet . Called by the token issuer .",
        "params": {
          "_tokenURI": ": serialized json object that has the following data ( category, name , desc , tages, ipfs hash).",
          "base": ": eg. 10 .",
          "deadline": ":  must be timestamp in future .",
          "r": ": normal output of an ECDSA signature",
          "s": ": normal output of an ECDSA signature `v`, `r` and `s` must be valid `secp256k1` signature from `owner`  or 'approved for all' account over EIP712-formatted function arguments.",
          "share": ": eg. 25.",
          "to": ": NFT issuer.",
          "v": "needed to recover the public key"
        },
        "returns": {
          "_0": "token id ."
        }
      },
      "MintNFTWithoutRoyalty(address,string)": {
        "details": ": tokens are transfered directly to the admin wallet. Called by the token issuer .",
        "params": {
          "_tokenURI": ": serialized json object that has the following data ( category, name , desc , tages, ipfs hash).",
          "to": ": NFT issuer."
        },
        "returns": {
          "_0": "token id ."
        }
      },
      "MintNFTWithoutRoyaltyPremit(address,string,uint256,uint8,bytes32,bytes32)": {
        "details": ": tokens are transfered directly to the admin wallet. Called by the token issuer .",
        "params": {
          "_tokenURI": ": serialized json object that has the following data ( category, name , desc , tages, ipfs hash).",
          "deadline": ":  must be timestamp in future .",
          "r": ": normal output of an ECDSA signature",
          "s": ": normal output of an ECDSA signature `v`, `r` and `s` must be valid `secp256k1` signature from `owner`  or 'approved for all' account over EIP712-formatted function arguments.",
          "to": ": NFT issuer.",
          "v": "needed to recover the public key"
        },
        "returns": {
          "_0": "token id ."
        }
      },
      "changeFees(uint256)": {
        "params": {
          "newFees": ": integer number represents the new fees."
        }
      },
      "changeNftContract(address)": {
        "details": "for later on upgrade , if we have.",
        "params": {
          "_nFTContract": ": startfi new NFT contract."
        }
      },
      "changePaymentContract(address)": {
        "details": "for later on upgrade , if we have",
        "params": {
          "_paymentContractAddress": ": startfi new utility contract"
        }
      },
      "info()": {
        "details": ":  function to get all the public info about the contract.",
        "returns": {
          "_0": "NFT token address, utility token address, minting fees."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "StartFi NFT Payment contract. [ desc ] : contract to handle minting NFT after the contract is approved to transfer the fees by STFI.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "MintNFTWithRoyalty(address,string,uint8,uint8)": {
        "notice": "caller should approve the contract to transfer the fees first."
      },
      "MintNFTWithRoyaltyPremit(address,string,uint8,uint8,uint256,uint8,bytes32,bytes32)": {
        "notice": "caller should sing a message to premit the contract to transfer the fees ."
      },
      "MintNFTWithoutRoyalty(address,string)": {
        "notice": "caller should approve the contract to transfer the fees first."
      },
      "MintNFTWithoutRoyaltyPremit(address,string,uint256,uint8,bytes32,bytes32)": {
        "notice": "caller should approve the contract to transfer the fees first."
      },
      "changeFees(uint256)": {
        "notice": "only called by admin wallet."
      },
      "changeNftContract(address)": {
        "notice": "only called by admin wallet."
      },
      "changePaymentContract(address)": {
        "notice": "only called by admin wallet"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 565,
        "contract": "contracts/StartFiNFTPayment.sol:StartFiNFTPayment",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 6828,
        "contract": "contracts/StartFiNFTPayment.sol:StartFiNFTPayment",
        "label": "_fees",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 6830,
        "contract": "contracts/StartFiNFTPayment.sol:StartFiNFTPayment",
        "label": "_NFTToken",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 6832,
        "contract": "contracts/StartFiNFTPayment.sol:StartFiNFTPayment",
        "label": "_paymentToken",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}