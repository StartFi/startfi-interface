{
  "address": "0x7CF5FCd980ED4A4523553b5B4d228eD7Dec416A2",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_NFTContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_paymentContract",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "share",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "base",
          "type": "uint8"
        }
      ],
      "name": "MintNFTWithRoyalty",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        }
      ],
      "name": "MintNFTWithoutRoyalty",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newFees",
          "type": "uint256"
        }
      ],
      "name": "changeFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nFTContract",
          "type": "address"
        }
      ],
      "name": "changeNftContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_paymentContractAddress",
          "type": "address"
        }
      ],
      "name": "changePaymentContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "info",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x387d56091fb8d592e5ee334de37cc4fbe9a292086de961575ff36e16f241160d",
  "receipt": {
    "to": null,
    "from": "0xe092b1fa25DF5786D151246E492Eed3d15EA4dAA",
    "contractAddress": "0x7CF5FCd980ED4A4523553b5B4d228eD7Dec416A2",
    "transactionIndex": 0,
    "gasUsed": "743767",
    "logsBloom": "0x
    "blockHash": "0x66c2ea721082be9d3e962849303c90f39c445c9c65069af634c4ff4aeec3a1e3",
    "transactionHash": "0x387d56091fb8d592e5ee334de37cc4fbe9a292086de961575ff36e16f241160d",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 54311035,
        "transactionHash": "0x387d56091fb8d592e5ee334de37cc4fbe9a292086de961575ff36e16f241160d",
        "address": "0x0000000000000000000000000000000000000000",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000e092b1fa25df5786d151246e492eed3d15ea4daa"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "logIndex": 0,
        "blockHash": "0x66c2ea721082be9d3e962849303c90f39c445c9c65069af634c4ff4aeec3a1e3"
      }
    ],
    "blockNumber": 54311035,
    "cumulativeGasUsed": "0",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xd00fDa3a1E6d1Db0931914d46Acc5C414047f44f",
    "0xEcA31401263042B2Ec98457D0Ae1CaB9064f948E"
  ],
  "solcInputHash": "540a605660aab0f6c4971604972f3add",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_NFTContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_paymentContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"share\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"base\",\"type\":\"uint8\"}],\"name\":\"MintNFTWithRoyalty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"}],\"name\":\"MintNFTWithoutRoyalty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFees\",\"type\":\"uint256\"}],\"name\":\"changeFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nFTContract\",\"type\":\"address\"}],\"name\":\"changeNftContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_paymentContractAddress\",\"type\":\"address\"}],\"name\":\"changePaymentContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"info\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Eman Herawy, StartFi Team.\",\"kind\":\"dev\",\"methods\":{\"MintNFTWithRoyalty(address,string,uint8,uint8)\":{\"details\":\": tokens are transfered directly to the admin wallet . Called by the token issuer .\",\"params\":{\"_tokenURI\":\": serialized json object that has the following data ( category, name , desc , tages, ipfs hash).\",\"base\":\": eg. 10 .\",\"share\":\": eg. 25.\",\"to\":\": NFT issuer.\"},\"returns\":{\"_0\":\"token id .\"}},\"MintNFTWithoutRoyalty(address,string)\":{\"details\":\": tokens are transfered directly to the admin wallet. Called by the token issuer .\",\"params\":{\"_tokenURI\":\": serialized json object that has the following data ( category, name , desc , tages, ipfs hash).\",\"to\":\": NFT issuer.\"},\"returns\":{\"_0\":\"token id .\"}},\"changeFees(uint256)\":{\"params\":{\"newFees\":\": integer number represents the new fees.\"}},\"changeNftContract(address)\":{\"details\":\"for later on upgrade , if we have.\",\"params\":{\"_nFTContract\":\": startfi new NFT contract.\"}},\"changePaymentContract(address)\":{\"details\":\"for later on upgrade , if we have\",\"params\":{\"_paymentContractAddress\":\": startfi new utility contract\"}},\"info()\":{\"details\":\":  function to get all the public info about the contract.\",\"returns\":{\"_0\":\"NFT token address, utility token address, minting fees.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"StartFi NFT Payment contract. [ desc ] : contract to handle minting NFT after the contract is approved to transfer the fees by STFI.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"MintNFTWithRoyalty(address,string,uint8,uint8)\":{\"notice\":\"caller should approve the contract to transfer the fees first.\"},\"MintNFTWithoutRoyalty(address,string)\":{\"notice\":\"caller should approve the contract to transfer the fees first.\"},\"changeFees(uint256)\":{\"notice\":\"only called by admin wallet.\"},\"changeNftContract(address)\":{\"notice\":\"only called by admin wallet.\"},\"changePaymentContract(address)\":{\"notice\":\"only called by admin wallet\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StartFiNFTPayment.sol\":\"StartFiNFTPayment\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"contracts/StartFiNFTPayment.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\n\\npragma solidity >=0.8.0;\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n import \\\"./interface/IERC721RoyaltyMinter.sol\\\";\\n/**\\n * @author Eman Herawy, StartFi Team.\\n *@title  StartFi NFT Payment contract.\\n * [ desc ] : contract to handle minting NFT after the contract is approved to transfer the fees by STFI.\\n */\\ncontract StartFiNFTPayment is Ownable {\\n /******************************************* decalrations go here ********************************************************* */\\n     uint256 _fees=5;\\n     address private _NFTToken;\\n    address private _paymentToken;\\n\\n /******************************************* constructor goes here ********************************************************* */\\n\\n  constructor(\\n        address _NFTContract ,\\n        address _paymentContract\\n    )   {\\n         \\n       \\n        _NFTToken = _NFTContract;\\n        _paymentToken = _paymentContract;\\n    }\\n\\n     /******************************************* read state functions go here ********************************************************* */\\n  \\n /**\\n     * @dev :wrap function to get the total allowed number of tokens that this contract can transfer from the given account .\\n\\n    * @param owner: owner address.\\n    * @return allowed number of tokens that this contract can transfer from the owner account.\\n     */\\n  function _getAllowance(address owner) view private returns (uint256 ) {\\n        return IERC20(_paymentToken).allowance( owner, address(this));\\n    }\\n\\n /**\\n    * @dev :  function to get all the public info about the contract.\\n    * @return NFT token address, utility token address, minting fees.\\n     */\\n    function info() view external returns (address,address,uint256) {\\n        return(_NFTToken,_paymentToken,_fees);\\n    }\\n  /******************************************* state functions go here ********************************************************* */\\n\\n /**\\n    * @notice  caller should approve the contract to transfer the fees first.\\n    * @dev : tokens are transfered directly to the admin wallet . Called by the token issuer .\\n    * @param to: NFT issuer.\\n    * @param _tokenURI: serialized json object that has the following data ( category, name , desc , tages, ipfs hash).\\n    * @param share: eg. 25.\\n    * @param base: eg. 10 .\\n    * @return token id .\\n     */\\nfunction MintNFTWithRoyalty(address to, string memory _tokenURI,uint8 share,uint8 base) external returns(uint256){\\n    require(_getAllowance(_msgSender())>=_fees,\\\"Not enough fees paid\\\");\\n    IERC20(_paymentToken). transferFrom(_msgSender(),owner(),  _fees);\\n return  IERC721RoyaltyMinter(_NFTToken). mintWithRoyalty(to, _tokenURI, share,base);\\n}\\n /**\\n    * @notice  caller should approve the contract to transfer the fees first.\\n    * @dev : tokens are transfered directly to the admin wallet. Called by the token issuer .\\n    * @param to: NFT issuer.\\n    * @param _tokenURI: serialized json object that has the following data ( category, name , desc , tages, ipfs hash).\\n    * @return token id .\\n     */\\nfunction MintNFTWithoutRoyalty(address to, string memory _tokenURI) external returns(uint256){\\n    require(_getAllowance(_msgSender())>=_fees,\\\"Not enough fees paid\\\");\\n    IERC20(_paymentToken). transferFrom(_msgSender(),owner(),  _fees);\\n return  IERC721RoyaltyMinter(_NFTToken). mint(to, _tokenURI);\\n}\\n /**\\n    * @notice  only called by admin wallet.\\n    * @param newFees : integer number represents the new fees.\\n    */\\n   function changeFees(uint256 newFees) external onlyOwner   {\\n         // fees is a value between 1-3 %\\n         _fees=newFees;\\n         \\n     }\\n      /**\\n    * @notice  only called by admin wallet.\\n    * @dev for later on upgrade , if we have.\\n    * @param _nFTContract : startfi new NFT contract.\\n    */\\n   function changeNftContract(address _nFTContract) external onlyOwner   {\\n     _NFTToken = _nFTContract;\\n         \\n     }\\n        /**\\n    * @notice  only called by admin wallet\\n    * @dev for later on upgrade , if we have\\n    * @param _paymentContractAddress : startfi new utility contract\\n    */\\n   function changePaymentContract(address _paymentContractAddress) external onlyOwner   {\\n      _paymentToken = _paymentContractAddress;\\n         \\n     }\\n}\\n\",\"keccak256\":\"0x8dcdd8b1b18a3a670806f9f3d3dbed56637a2a80b376f8adccb7a2201636b2e5\",\"license\":\"AGPL-3.0-or-later\"},\"contracts/interface/IERC721RoyaltyMinter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\ninterface IERC721RoyaltyMinter {\\n function mint(address to, string memory _tokenURI) external  returns(uint256);\\n function mintWithRoyalty(address to, string memory _tokenURI,uint8 share,uint8 base) external  returns(uint256);\\n}\",\"keccak256\":\"0xafc1a8c2616371cb83f7d040355485de73f5affe1f12704fb8490bfcf1a972e0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052600560015534801561001557600080fd5b50604051610bfb380380610bfb833981016040819052610034916100d9565b600061003e6100b9565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600280546001600160a01b039384166001600160a01b0319918216179091556003805492909316911617905561010b565b3390565b80516001600160a01b03811681146100d457600080fd5b919050565b600080604083850312156100eb578182fd5b6100f4836100bd565b9150610102602084016100bd565b90509250929050565b610ae18061011a6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063715018a611610066578063715018a6146101005780638606e604146101085780638da5cb5b1461011b578063a3db174414610130578063f2fde38b1461014357610093565b8063370158ea14610098578063489d2104146100b85780634f43eee4146100cd5780636cda375b146100ed575b600080fd5b6100a0610156565b6040516100af93929190610954565b60405180910390f35b6100cb6100c63660046107b8565b610172565b005b6100e06100db3660046107d2565b6101dc565b6040516100af9190610a8c565b6100cb6100fb3660046108ab565b61032f565b6100cb610373565b6100cb6101163660046107b8565b6103fc565b61012361045d565b6040516100af9190610926565b6100e061013e36600461081e565b61046c565b6100cb6101513660046107b8565b6105c0565b6002546003546001546001600160a01b03928316939290911691565b61017a610680565b6001600160a01b031661018b61045d565b6001600160a01b0316146101ba5760405162461bcd60e51b81526004016101b190610a57565b60405180910390fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b60006001546101f16101ec610680565b610684565b101561020f5760405162461bcd60e51b81526004016101b190610a29565b6003546001600160a01b03166323b872dd610228610680565b61023061045d565b6001546040518463ffffffff1660e01b815260040161025193929190610954565b602060405180830381600087803b15801561026b57600080fd5b505af115801561027f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a3919061088b565b5060025460405163d0def52160e01b81526001600160a01b039091169063d0def521906102d69086908690600401610978565b602060405180830381600087803b1580156102f057600080fd5b505af1158015610304573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032891906108c3565b9392505050565b610337610680565b6001600160a01b031661034861045d565b6001600160a01b03161461036e5760405162461bcd60e51b81526004016101b190610a57565b600155565b61037b610680565b6001600160a01b031661038c61045d565b6001600160a01b0316146103b25760405162461bcd60e51b81526004016101b190610a57565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b610404610680565b6001600160a01b031661041561045d565b6001600160a01b03161461043b5760405162461bcd60e51b81526004016101b190610a57565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031690565b600060015461047c6101ec610680565b101561049a5760405162461bcd60e51b81526004016101b190610a29565b6003546001600160a01b03166323b872dd6104b3610680565b6104bb61045d565b6001546040518463ffffffff1660e01b81526004016104dc93929190610954565b602060405180830381600087803b1580156104f657600080fd5b505af115801561050a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052e919061088b565b50600254604051631a1752ab60e31b81526001600160a01b039091169063d0ba9558906105659088908890889088906004016109a4565b602060405180830381600087803b15801561057f57600080fd5b505af1158015610593573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b791906108c3565b95945050505050565b6105c8610680565b6001600160a01b03166105d961045d565b6001600160a01b0316146105ff5760405162461bcd60e51b81526004016101b190610a57565b6001600160a01b0381166106255760405162461bcd60e51b81526004016101b1906109e3565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b600354604051636eb1769f60e11b81526000916001600160a01b03169063dd62ed3e906106b7908590309060040161093a565b60206040518083038186803b1580156106cf57600080fd5b505afa1580156106e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070791906108c3565b90505b919050565b80356001600160a01b038116811461070a57600080fd5b600082601f830112610736578081fd5b813567ffffffffffffffff8082111561075157610751610a95565b604051601f8301601f19168101602001828111828210171561077557610775610a95565b60405282815284830160200186101561078c578384fd5b82602086016020830137918201602001929092529392505050565b803560ff8116811461070a57600080fd5b6000602082840312156107c9578081fd5b6103288261070f565b600080604083850312156107e4578081fd5b6107ed8361070f565b9150602083013567ffffffffffffffff811115610808578182fd5b61081485828601610726565b9150509250929050565b60008060008060808587031215610833578182fd5b61083c8561070f565b9350602085013567ffffffffffffffff811115610857578283fd5b61086387828801610726565b935050610872604086016107a7565b9150610880606086016107a7565b905092959194509250565b60006020828403121561089c578081fd5b81518015158114610328578182fd5b6000602082840312156108bc578081fd5b5035919050565b6000602082840312156108d4578081fd5b5051919050565b60008151808452815b81811015610900576020818501810151868301820152016108e4565b818111156109115782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b038316815260406020820181905260009061099c908301846108db565b949350505050565b6001600160a01b03851681526080602082018190526000906109c8908301866108db565b60ff9485166040840152929093166060909101529392505050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b602080825260149082015273139bdd08195b9bdd59da081999595cc81c185a5960621b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b90815260200190565b634e487b7160e01b600052604160045260246000fdfea26469706673582212209286d352f02a334af969494236f9c631ed802a8e13f1a0833aae85be40cbc7a864736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c8063715018a611610066578063715018a6146101005780638606e604146101085780638da5cb5b1461011b578063a3db174414610130578063f2fde38b1461014357610093565b8063370158ea14610098578063489d2104146100b85780634f43eee4146100cd5780636cda375b146100ed575b600080fd5b6100a0610156565b6040516100af93929190610954565b60405180910390f35b6100cb6100c63660046107b8565b610172565b005b6100e06100db3660046107d2565b6101dc565b6040516100af9190610a8c565b6100cb6100fb3660046108ab565b61032f565b6100cb610373565b6100cb6101163660046107b8565b6103fc565b61012361045d565b6040516100af9190610926565b6100e061013e36600461081e565b61046c565b6100cb6101513660046107b8565b6105c0565b6002546003546001546001600160a01b03928316939290911691565b61017a610680565b6001600160a01b031661018b61045d565b6001600160a01b0316146101ba5760405162461bcd60e51b81526004016101b190610a57565b60405180910390fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b60006001546101f16101ec610680565b610684565b101561020f5760405162461bcd60e51b81526004016101b190610a29565b6003546001600160a01b03166323b872dd610228610680565b61023061045d565b6001546040518463ffffffff1660e01b815260040161025193929190610954565b602060405180830381600087803b15801561026b57600080fd5b505af115801561027f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a3919061088b565b5060025460405163d0def52160e01b81526001600160a01b039091169063d0def521906102d69086908690600401610978565b602060405180830381600087803b1580156102f057600080fd5b505af1158015610304573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032891906108c3565b9392505050565b610337610680565b6001600160a01b031661034861045d565b6001600160a01b03161461036e5760405162461bcd60e51b81526004016101b190610a57565b600155565b61037b610680565b6001600160a01b031661038c61045d565b6001600160a01b0316146103b25760405162461bcd60e51b81526004016101b190610a57565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b610404610680565b6001600160a01b031661041561045d565b6001600160a01b03161461043b5760405162461bcd60e51b81526004016101b190610a57565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031690565b600060015461047c6101ec610680565b101561049a5760405162461bcd60e51b81526004016101b190610a29565b6003546001600160a01b03166323b872dd6104b3610680565b6104bb61045d565b6001546040518463ffffffff1660e01b81526004016104dc93929190610954565b602060405180830381600087803b1580156104f657600080fd5b505af115801561050a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052e919061088b565b50600254604051631a1752ab60e31b81526001600160a01b039091169063d0ba9558906105659088908890889088906004016109a4565b602060405180830381600087803b15801561057f57600080fd5b505af1158015610593573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b791906108c3565b95945050505050565b6105c8610680565b6001600160a01b03166105d961045d565b6001600160a01b0316146105ff5760405162461bcd60e51b81526004016101b190610a57565b6001600160a01b0381166106255760405162461bcd60e51b81526004016101b1906109e3565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b600354604051636eb1769f60e11b81526000916001600160a01b03169063dd62ed3e906106b7908590309060040161093a565b60206040518083038186803b1580156106cf57600080fd5b505afa1580156106e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070791906108c3565b90505b919050565b80356001600160a01b038116811461070a57600080fd5b600082601f830112610736578081fd5b813567ffffffffffffffff8082111561075157610751610a95565b604051601f8301601f19168101602001828111828210171561077557610775610a95565b60405282815284830160200186101561078c578384fd5b82602086016020830137918201602001929092529392505050565b803560ff8116811461070a57600080fd5b6000602082840312156107c9578081fd5b6103288261070f565b600080604083850312156107e4578081fd5b6107ed8361070f565b9150602083013567ffffffffffffffff811115610808578182fd5b61081485828601610726565b9150509250929050565b60008060008060808587031215610833578182fd5b61083c8561070f565b9350602085013567ffffffffffffffff811115610857578283fd5b61086387828801610726565b935050610872604086016107a7565b9150610880606086016107a7565b905092959194509250565b60006020828403121561089c578081fd5b81518015158114610328578182fd5b6000602082840312156108bc578081fd5b5035919050565b6000602082840312156108d4578081fd5b5051919050565b60008151808452815b81811015610900576020818501810151868301820152016108e4565b818111156109115782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b038316815260406020820181905260009061099c908301846108db565b949350505050565b6001600160a01b03851681526080602082018190526000906109c8908301866108db565b60ff9485166040840152929093166060909101529392505050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b602080825260149082015273139bdd08195b9bdd59da081999595cc81c185a5960621b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b90815260200190565b634e487b7160e01b600052604160045260246000fdfea26469706673582212209286d352f02a334af969494236f9c631ed802a8e13f1a0833aae85be40cbc7a864736f6c63430008000033",
  "devdoc": {
    "author": "Eman Herawy, StartFi Team.",
    "kind": "dev",
    "methods": {
      "MintNFTWithRoyalty(address,string,uint8,uint8)": {
        "details": ": tokens are transfered directly to the admin wallet . Called by the token issuer .",
        "params": {
          "_tokenURI": ": serialized json object that has the following data ( category, name , desc , tages, ipfs hash).",
          "base": ": eg. 10 .",
          "share": ": eg. 25.",
          "to": ": NFT issuer."
        },
        "returns": {
          "_0": "token id ."
        }
      },
      "MintNFTWithoutRoyalty(address,string)": {
        "details": ": tokens are transfered directly to the admin wallet. Called by the token issuer .",
        "params": {
          "_tokenURI": ": serialized json object that has the following data ( category, name , desc , tages, ipfs hash).",
          "to": ": NFT issuer."
        },
        "returns": {
          "_0": "token id ."
        }
      },
      "changeFees(uint256)": {
        "params": {
          "newFees": ": integer number represents the new fees."
        }
      },
      "changeNftContract(address)": {
        "details": "for later on upgrade , if we have.",
        "params": {
          "_nFTContract": ": startfi new NFT contract."
        }
      },
      "changePaymentContract(address)": {
        "details": "for later on upgrade , if we have",
        "params": {
          "_paymentContractAddress": ": startfi new utility contract"
        }
      },
      "info()": {
        "details": ":  function to get all the public info about the contract.",
        "returns": {
          "_0": "NFT token address, utility token address, minting fees."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "StartFi NFT Payment contract. [ desc ] : contract to handle minting NFT after the contract is approved to transfer the fees by STFI.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "MintNFTWithRoyalty(address,string,uint8,uint8)": {
        "notice": "caller should approve the contract to transfer the fees first."
      },
      "MintNFTWithoutRoyalty(address,string)": {
        "notice": "caller should approve the contract to transfer the fees first."
      },
      "changeFees(uint256)": {
        "notice": "only called by admin wallet."
      },
      "changeNftContract(address)": {
        "notice": "only called by admin wallet."
      },
      "changePaymentContract(address)": {
        "notice": "only called by admin wallet"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 565,
        "contract": "contracts/StartFiNFTPayment.sol:StartFiNFTPayment",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 7061,
        "contract": "contracts/StartFiNFTPayment.sol:StartFiNFTPayment",
        "label": "_fees",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 7063,
        "contract": "contracts/StartFiNFTPayment.sol:StartFiNFTPayment",
        "label": "_NFTToken",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 7065,
        "contract": "contracts/StartFiNFTPayment.sol:StartFiNFTPayment",
        "label": "_paymentToken",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}