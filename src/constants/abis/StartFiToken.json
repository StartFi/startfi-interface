{
  "address": "0x791E48D5eC148191Baa680fE2Dd337D3D5d4A147",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERMIT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TRANSFER_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "transferWithPermit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x0e4b3e6c1be3097aea9f931994ab3aa3c03680e3c9e2ea48178ebe2ea0038c32",
  "receipt": {
    "to": null,
    "from": "0x0F827B556771a6711dFC7d5DD342a744688a9CDb",
    "contractAddress": "0x791E48D5eC148191Baa680fE2Dd337D3D5d4A147",
    "transactionIndex": 13,
    "gasUsed": "1227190",
    "logsBloom": "0x
    "blockHash": "0x152f16f729b788a4bbf3504d1b012eee4e09f2fc451c4c8fbdcde4d77779e846",
    "transactionHash": "0x0e4b3e6c1be3097aea9f931994ab3aa3c03680e3c9e2ea48178ebe2ea0038c32",
    "logs": [
      {
        "transactionIndex": 13,
        "blockNumber": 10780021,
        "transactionHash": "0x0e4b3e6c1be3097aea9f931994ab3aa3c03680e3c9e2ea48178ebe2ea0038c32",
        "address": "0x791E48D5eC148191Baa680fE2Dd337D3D5d4A147",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000f827b556771a6711dfc7d5dd342a744688a9cdb"
        ],
        "data": "0x00000000000000000000000000000000000000000052b7d2dcc80cd2e4000000",
        "logIndex": 34,
        "blockHash": "0x152f16f729b788a4bbf3504d1b012eee4e09f2fc451c4c8fbdcde4d77779e846"
      }
    ],
    "blockNumber": 10780021,
    "cumulativeGasUsed": "2655618",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "StartFiToken",
    "STFI",
    "0x0F827B556771a6711dFC7d5DD342a744688a9CDb"
  ],
  "solcInputHash": "e063f09e179f3cfaa27498a2c404b970",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSFER_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"transferWithPermit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Eman Herawy, StartFi Team\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as allowance of `spender` account over `owner` account's AnyswapV3ERC20 token, given `owner` account's signed approval. Emits {Approval} event. Requirements:   - `deadline` must be timestamp in future.   - `v`, `r` and `s` must be valid `secp256k1` signature from `owner` account over EIP712-formatted function arguments.   - the signature must use `owner` account's current nonce (see {nonces}).   - the signer cannot be zero address and must be `owner` account. For more information on signature format, see https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. AnyswapV3ERC20 token implementation adapted from https://github.com/albertocuestacanada/ERC20Permit/blob/master/contracts/ERC20Permit.sol.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"nonces\":{\"details\":\"Records current ERC2612 nonce for account. This value must be included whenever signature is generated for {permit}. Every successful call to {permit} increases account's nonce by one. This prevents signature from being used multiple times.\"}},\"title\":\"Start FiToken. [ desc ] : A Startfi Utiltiy token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StartFiToken.sol\":\"StartFiToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The defaut value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor (string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n\\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\\n        require(currentAllowance >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n        _approve(sender, _msgSender(), currentAllowance - amount);\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        _approve(_msgSender(), spender, currentAllowance - subtractedValue);\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        uint256 senderBalance = _balances[sender];\\n        require(senderBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balances[sender] = senderBalance - amount;\\n        _balances[recipient] += amount;\\n\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        _balances[account] = accountBalance - amount;\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\\n}\\n\",\"keccak256\":\"0xfeccdcbf67b2006a715e5af1a4c7556004d95b2806552b5cc54e46e8eb7e887b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC20.sol\\\";\\nimport \\\"../../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\n * tokens and those that they have an allowance for, in a way that can be\\n * recognized off-chain (via event analysis).\\n */\\nabstract contract ERC20Burnable is Context, ERC20 {\\n    /**\\n     * @dev Destroys `amount` tokens from the caller.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burn(uint256 amount) public virtual {\\n        _burn(_msgSender(), amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\\n     * allowance.\\n     *\\n     * See {ERC20-_burn} and {ERC20-allowance}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have allowance for ``accounts``'s tokens of at least\\n     * `amount`.\\n     */\\n    function burnFrom(address account, uint256 amount) public virtual {\\n        uint256 currentAllowance = allowance(account, _msgSender());\\n        require(currentAllowance >= amount, \\\"ERC20: burn amount exceeds allowance\\\");\\n        _approve(account, _msgSender(), currentAllowance - amount);\\n        _burn(account, amount);\\n    }\\n}\\n\",\"keccak256\":\"0xb8cc16fa5514ccbff1123c566ec0a21682f1ded0ca7e5df719c6bd0b7429390a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/presets/ERC20PresetFixedSupply.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../extensions/ERC20Burnable.sol\\\";\\n\\n/**\\n * @dev {ERC20} token, including:\\n *\\n *  - Preminted initial supply\\n *  - Ability for holders to burn (destroy) their tokens\\n *  - No access control mechanism (for minting/pausing) and hence no governance\\n *\\n * This contract uses {ERC20Burnable} to include burn capabilities - head to\\n * its documentation for details.\\n *\\n * _Available since v3.4._\\n */\\ncontract ERC20PresetFixedSupply is ERC20Burnable {\\n    /**\\n     * @dev Mints `initialSupply` amount of token and transfers them to `owner`.\\n     *\\n     * See {ERC20-constructor}.\\n     */\\n    constructor(\\n        string memory name,\\n        string memory symbol,\\n        uint256 initialSupply,\\n        address owner\\n    ) ERC20(name, symbol) {\\n        _mint(owner, initialSupply);\\n    }\\n}\\n\",\"keccak256\":\"0x5f7388d6c413c6f1faece48438f21d296296140d8a421c62515613d1e84804ca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"contracts/StartFiToken.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\n\\npragma solidity >=0.8.0;\\npragma experimental SMTChecker;\\nimport \\\"@openzeppelin/contracts/token/ERC20/presets/ERC20PresetFixedSupply.sol\\\";\\n\\n/**\\n * @author Eman Herawy, StartFi Team\\n *@title  Start FiToken.\\n * [ desc ] : A Startfi Utiltiy token\\n */\\ncontract StartFiToken is ERC20PresetFixedSupply{\\n        bytes32 public DOMAIN_SEPARATOR;\\nbytes32 public constant PERMIT_TYPEHASH = keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\");\\n    bytes32 public constant TRANSFER_TYPEHASH = keccak256(\\\"Transfer(address owner,address to,uint256 value,uint256 nonce,uint256 deadline)\\\");\\n   \\n  /// @dev Records current ERC2612 nonce for account. This value must be included whenever signature is generated for {permit}.\\n    /// Every successful call to {permit} increases account's nonce by one. This prevents signature from being used multiple times.\\n    mapping (address => uint256) public  nonces;\\n    constructor(string memory name,\\n        string memory symbol,\\n        /*uint256 initialSupply,*/\\n        address owner) ERC20PresetFixedSupply(name,symbol,100000000 * 1 ether,owner)  {\\n\\n            uint chainId;\\n        assembly {\\n            chainId := chainId\\n        }\\n        DOMAIN_SEPARATOR = keccak256(\\n            abi.encode(\\n                keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)'),\\n                keccak256(bytes(name)),\\n                keccak256(bytes('1')),\\n                chainId,\\n                address(this)\\n            )\\n        );\\n    }\\n    /// @dev Sets `value` as allowance of `spender` account over `owner` account's AnyswapV3ERC20 token, given `owner` account's signed approval.\\n    /// Emits {Approval} event.\\n    /// Requirements:\\n    ///   - `deadline` must be timestamp in future.\\n    ///   - `v`, `r` and `s` must be valid `secp256k1` signature from `owner` account over EIP712-formatted function arguments.\\n    ///   - the signature must use `owner` account's current nonce (see {nonces}).\\n    ///   - the signer cannot be zero address and must be `owner` account.\\n    /// For more information on signature format, see https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\\n    /// AnyswapV3ERC20 token implementation adapted from https://github.com/albertocuestacanada/ERC20Permit/blob/master/contracts/ERC20Permit.sol.\\n    // function permit(address target, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) external   {\\n    //     require(block.timestamp <= deadline, \\\"AnyswapV3ERC20: Expired permit\\\");\\n\\n    //     bytes32 hashStruct = keccak256(\\n    //         abi.encode(\\n    //             PERMIT_TYPEHASH,\\n    //             target,\\n    //             spender,\\n    //             value,\\n    //             nonces[target]++,\\n    //             deadline));\\n\\n    //     require(verifyEIP712(target, hashStruct, v, r, s) || verifyPersonalSign(target, hashStruct, v, r, s));\\n    //     _approve(target,   spender, value);\\n    // }\\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\\n        require(deadline >= block.timestamp, 'UniswapV2: EXPIRED');\\n        bytes32 digest = keccak256(\\n            abi.encodePacked(\\n                '\\\\x19\\\\x01',\\n                DOMAIN_SEPARATOR,\\n                keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline))\\n            )\\n        );\\n        address recoveredAddress = ecrecover(digest, v, r, s);\\n        require(recoveredAddress != address(0) && recoveredAddress == owner, 'UniswapV2: INVALID_SIGNATURE');\\n        _approve(owner, spender, value);\\n    }\\n    function transferWithPermit(address target, address to, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) external   returns (bool) {\\n        require(block.timestamp <= deadline, \\\"AnyswapV3ERC20: Expired permit\\\");\\n\\n        bytes32 hashStruct = keccak256(\\n            abi.encode(\\n                TRANSFER_TYPEHASH,\\n                target,\\n                to,\\n                value,\\n                nonces[target]++,\\n                deadline));\\n\\n        require(verifyEIP712(target, hashStruct, v, r, s) || verifyPersonalSign(target, hashStruct, v, r, s));\\n\\n        require(to != address(0) || to != address(this));\\n\\n       \\n        _transfer(target, to, value);\\n        return true;\\n    }\\n\\n    function verifyEIP712(address target, bytes32 hashStruct, uint8 v, bytes32 r, bytes32 s) internal view returns (bool) {\\n        bytes32 hash = keccak256(\\n            abi.encodePacked(\\n                \\\"\\\\x19\\\\x01\\\",\\n                DOMAIN_SEPARATOR,\\n                hashStruct));\\n        address signer = ecrecover(hash, v, r, s);\\n        return (signer != address(0) && signer == target);\\n    }\\n\\n    function verifyPersonalSign(address target, bytes32 hashStruct, uint8 v, bytes32 r, bytes32 s) internal view returns (bool) {\\n        bytes32 hash = prefixed(hashStruct);\\n        address signer = ecrecover(hash, v, r, s);\\n        return (signer != address(0) && signer == target);\\n    }\\n\\n    // Builds a prefixed hash to mimic the behavior of eth_sign.\\n    function prefixed(bytes32 hash) internal view returns (bytes32) {\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", DOMAIN_SEPARATOR, hash));\\n    }\\n}\\n\",\"keccak256\":\"0x7ca37f4ef3fc8fbaa1dfde8a09566a00d6f393a0bb4cfd2664246400e63560f3\",\"license\":\"AGPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200179c3803806200179c833981016040819052620000349162000355565b82826a52b7d2dcc80cd2e400000083838381600390805190602001906200005d92919062000204565b5080516200007390600490602084019062000204565b5050506200008881836200012b60201b60201c565b5050845160208087019190912060408051808201825260018152603160f81b9084015251600094506200010593507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f927fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6918691309101620003de565b6040516020818303038152906040528051906020012060058190555050505050620004c2565b6001600160a01b0382166200015d5760405162461bcd60e51b815260040162000154906200040a565b60405180910390fd5b6200016b60008383620001ff565b80600260008282546200017f91906200044a565b90915550506001600160a01b03821660009081526020819052604081208054839290620001ae9084906200044a565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90620001f390859062000441565b60405180910390a35050565b505050565b82805462000212906200046f565b90600052602060002090601f01602090048101928262000236576000855562000281565b82601f106200025157805160ff191683800117855562000281565b8280016001018555821562000281579182015b828111156200028157825182559160200191906001019062000264565b506200028f92915062000293565b5090565b5b808211156200028f576000815560010162000294565b600082601f830112620002bb578081fd5b81516001600160401b0380821115620002d857620002d8620004ac565b6040516020601f8401601f1916820181018381118382101715620003005762000300620004ac565b604052838252858401810187101562000317578485fd5b8492505b838310156200033a57858301810151828401820152918201916200031b565b838311156200034b57848185840101525b5095945050505050565b6000806000606084860312156200036a578283fd5b83516001600160401b038082111562000381578485fd5b6200038f87838801620002aa565b94506020860151915080821115620003a5578384fd5b50620003b486828701620002aa565b604086015190935090506001600160a01b0381168114620003d3578182fd5b809150509250925092565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b600082198211156200046a57634e487b7160e01b81526011600452602481fd5b500190565b6002810460018216806200048457607f821691505b60208210811415620004a657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6112ca80620004d26000396000f3fe608060405234801561001057600080fd5b50600436106101205760003560e01c806342966c68116100ad57806395d89b411161007157806395d89b411461022c578063a457c2d714610234578063a9059cbb14610247578063d505accf1461025a578063dd62ed3e1461026d57610120565b806342966c68146101cb578063605629d6146101e057806370a08231146101f357806379cc6790146102065780637ecebe001461021957610120565b806323b872dd116100f457806323b872dd1461018057806330adf81f14610193578063313ce5671461019b5780633644e515146101b057806339509351146101b857610120565b8062bf26f41461012557806306fdde0314610143578063095ea7b31461015857806318160ddd14610178575b600080fd5b61012d610280565b60405161013a9190610dfb565b60405180910390f35b61014b6102a4565b60405161013a9190610e56565b61016b610166366004610d5e565b610336565b60405161013a9190610df0565b61012d610353565b61016b61018e366004610cb2565b610359565b61012d6103f9565b6101a361041d565b60405161013a91906111eb565b61012d610422565b61016b6101c6366004610d5e565b610428565b6101de6101d9366004610d87565b610477565b005b61016b6101ee366004610ced565b61048b565b61012d610201366004610c5f565b610598565b6101de610214366004610d5e565b6105b7565b61012d610227366004610c5f565b61060c565b61014b61061e565b61016b610242366004610d5e565b61062d565b61016b610255366004610d5e565b6106a8565b6101de610268366004610ced565b6106bc565b61012d61027b366004610c80565b610837565b7f42ce63790c28229c123925d83266e77c04d28784552ab68b350a9003226cbd5981565b6060600380546102b390611228565b80601f01602080910402602001604051908101604052809291908181526020018280546102df90611228565b801561032c5780601f106103015761010080835404028352916020019161032c565b820191906000526020600020905b81548152906001019060200180831161030f57829003601f168201915b5050505050905090565b600061034a610343610862565b8484610866565b50600192915050565b60025490565b600061036684848461091a565b6001600160a01b038416600090815260016020526040812081610387610862565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156103d35760405162461bcd60e51b81526004016103ca90611050565b60405180910390fd5b6103ee856103df610862565b6103e98685611211565b610866565b506001949350505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601290565b60055481565b600061034a610435610862565b848460016000610443610862565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103e991906111f9565b610488610482610862565b82610a42565b50565b6000844211156104ad5760405162461bcd60e51b81526004016103ca90611019565b6001600160a01b038816600090815260066020526040812080547f42ce63790c28229c123925d83266e77c04d28784552ab68b350a9003226cbd59918b918b918b9190866104fa83611263565b919050558a60405160200161051496959493929190610e04565b6040516020818303038152906040528051906020012090506105398982878787610b28565b8061054c575061054c8982878787610be1565b61055557600080fd5b6001600160a01b03881615158061057557506001600160a01b0388163014155b61057e57600080fd5b61058989898961091a565b50600198975050505050505050565b6001600160a01b0381166000908152602081905260409020545b919050565b60006105c58361027b610862565b9050818110156105e75760405162461bcd60e51b81526004016103ca90611098565b6105fd836105f3610862565b6103e98585611211565b6106078383610a42565b505050565b60066020526000908152604090205481565b6060600480546102b390611228565b6000806001600061063c610862565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156106885760405162461bcd60e51b81526004016103ca906111a6565b61069e610693610862565b856103e98685611211565b5060019392505050565b600061034a6106b5610862565b848461091a565b428410156106dc5760405162461bcd60e51b81526004016103ca90610fed565b6005546001600160a01b038816600090815260066020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b91908761072f83611263565b919050558a60405160200161074996959493929190610e04565b60405160208183030381529060405280519060200120604051602001610770929190610dd5565b6040516020818303038152906040528051906020012090506000600182868686604051600081526020016040526040516107ad9493929190610e38565b6020604051602081039080840390855afa1580156107cf573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906108055750886001600160a01b0316816001600160a01b0316145b6108215760405162461bcd60e51b81526004016103ca90610f70565b61082c898989610866565b505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b03831661088c5760405162461bcd60e51b81526004016103ca90611162565b6001600160a01b0382166108b25760405162461bcd60e51b81526004016103ca90610f2e565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061090d908590610dfb565b60405180910390a3505050565b6001600160a01b0383166109405760405162461bcd60e51b81526004016103ca9061111d565b6001600160a01b0382166109665760405162461bcd60e51b81526004016103ca90610ea9565b610971838383610607565b6001600160a01b038316600090815260208190526040902054818110156109aa5760405162461bcd60e51b81526004016103ca90610fa7565b6109b48282611211565b6001600160a01b0380861660009081526020819052604080822093909355908516815290812080548492906109ea9084906111f9565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a349190610dfb565b60405180910390a350505050565b6001600160a01b038216610a685760405162461bcd60e51b81526004016103ca906110dc565b610a7482600083610607565b6001600160a01b03821660009081526020819052604090205481811015610aad5760405162461bcd60e51b81526004016103ca90610eec565b610ab78282611211565b6001600160a01b03841660009081526020819052604081209190915560028054849290610ae5908490611211565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061090d908690610dfb565b60008060055486604051602001610b40929190610dd5565b604051602081830303815290604052805190602001209050600060018287878760405160008152602001604052604051610b7d9493929190610e38565b6020604051602081039080840390855afa158015610b9f573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590610bd55750876001600160a01b0316816001600160a01b0316145b98975050505050505050565b600080610bed86610c14565b9050600060018287878760405160008152602001604052604051610b7d9493929190610e38565b600060055482604051602001610c2b929190610d9f565b604051602081830303815290604052805190602001209050919050565b80356001600160a01b03811681146105b257600080fd5b600060208284031215610c70578081fd5b610c7982610c48565b9392505050565b60008060408385031215610c92578081fd5b610c9b83610c48565b9150610ca960208401610c48565b90509250929050565b600080600060608486031215610cc6578081fd5b610ccf84610c48565b9250610cdd60208501610c48565b9150604084013590509250925092565b600080600080600080600060e0888a031215610d07578283fd5b610d1088610c48565b9650610d1e60208901610c48565b95506040880135945060608801359350608088013560ff81168114610d41578384fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610d70578182fd5b610d7983610c48565b946020939093013593505050565b600060208284031215610d98578081fd5b5035919050565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810192909252603c820152605c0190565b61190160f01b81526002810192909252602282015260420190565b901515815260200190565b90815260200190565b9586526001600160a01b0394851660208701529290931660408501526060840152608083019190915260a082015260c00190565b93845260ff9290921660208401526040830152606082015260800190565b6000602080835283518082850152825b81811015610e8257858101830151858201604001528201610e66565b81811115610e935783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601c908201527f556e697377617056323a20494e56414c49445f5349474e415455524500000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b602080825260129082015271155b9a5cddd85c158c8e881156141254915160721b604082015260600190565b6020808252601e908201527f416e7973776170563345524332303a2045787069726564207065726d69740000604082015260600190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526024908201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604082015263616e636560e01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b60ff91909116815260200190565b6000821982111561120c5761120c61127e565b500190565b6000828210156112235761122361127e565b500390565b60028104600182168061123c57607f821691505b6020821081141561125d57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156112775761127761127e565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220710426932f7559b94d5dccfe7e30be9094d0af180510cc18f2e12dd7e2d1a54464736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101205760003560e01c806342966c68116100ad57806395d89b411161007157806395d89b411461022c578063a457c2d714610234578063a9059cbb14610247578063d505accf1461025a578063dd62ed3e1461026d57610120565b806342966c68146101cb578063605629d6146101e057806370a08231146101f357806379cc6790146102065780637ecebe001461021957610120565b806323b872dd116100f457806323b872dd1461018057806330adf81f14610193578063313ce5671461019b5780633644e515146101b057806339509351146101b857610120565b8062bf26f41461012557806306fdde0314610143578063095ea7b31461015857806318160ddd14610178575b600080fd5b61012d610280565b60405161013a9190610dfb565b60405180910390f35b61014b6102a4565b60405161013a9190610e56565b61016b610166366004610d5e565b610336565b60405161013a9190610df0565b61012d610353565b61016b61018e366004610cb2565b610359565b61012d6103f9565b6101a361041d565b60405161013a91906111eb565b61012d610422565b61016b6101c6366004610d5e565b610428565b6101de6101d9366004610d87565b610477565b005b61016b6101ee366004610ced565b61048b565b61012d610201366004610c5f565b610598565b6101de610214366004610d5e565b6105b7565b61012d610227366004610c5f565b61060c565b61014b61061e565b61016b610242366004610d5e565b61062d565b61016b610255366004610d5e565b6106a8565b6101de610268366004610ced565b6106bc565b61012d61027b366004610c80565b610837565b7f42ce63790c28229c123925d83266e77c04d28784552ab68b350a9003226cbd5981565b6060600380546102b390611228565b80601f01602080910402602001604051908101604052809291908181526020018280546102df90611228565b801561032c5780601f106103015761010080835404028352916020019161032c565b820191906000526020600020905b81548152906001019060200180831161030f57829003601f168201915b5050505050905090565b600061034a610343610862565b8484610866565b50600192915050565b60025490565b600061036684848461091a565b6001600160a01b038416600090815260016020526040812081610387610862565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156103d35760405162461bcd60e51b81526004016103ca90611050565b60405180910390fd5b6103ee856103df610862565b6103e98685611211565b610866565b506001949350505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601290565b60055481565b600061034a610435610862565b848460016000610443610862565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103e991906111f9565b610488610482610862565b82610a42565b50565b6000844211156104ad5760405162461bcd60e51b81526004016103ca90611019565b6001600160a01b038816600090815260066020526040812080547f42ce63790c28229c123925d83266e77c04d28784552ab68b350a9003226cbd59918b918b918b9190866104fa83611263565b919050558a60405160200161051496959493929190610e04565b6040516020818303038152906040528051906020012090506105398982878787610b28565b8061054c575061054c8982878787610be1565b61055557600080fd5b6001600160a01b03881615158061057557506001600160a01b0388163014155b61057e57600080fd5b61058989898961091a565b50600198975050505050505050565b6001600160a01b0381166000908152602081905260409020545b919050565b60006105c58361027b610862565b9050818110156105e75760405162461bcd60e51b81526004016103ca90611098565b6105fd836105f3610862565b6103e98585611211565b6106078383610a42565b505050565b60066020526000908152604090205481565b6060600480546102b390611228565b6000806001600061063c610862565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156106885760405162461bcd60e51b81526004016103ca906111a6565b61069e610693610862565b856103e98685611211565b5060019392505050565b600061034a6106b5610862565b848461091a565b428410156106dc5760405162461bcd60e51b81526004016103ca90610fed565b6005546001600160a01b038816600090815260066020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b91908761072f83611263565b919050558a60405160200161074996959493929190610e04565b60405160208183030381529060405280519060200120604051602001610770929190610dd5565b6040516020818303038152906040528051906020012090506000600182868686604051600081526020016040526040516107ad9493929190610e38565b6020604051602081039080840390855afa1580156107cf573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906108055750886001600160a01b0316816001600160a01b0316145b6108215760405162461bcd60e51b81526004016103ca90610f70565b61082c898989610866565b505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b03831661088c5760405162461bcd60e51b81526004016103ca90611162565b6001600160a01b0382166108b25760405162461bcd60e51b81526004016103ca90610f2e565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061090d908590610dfb565b60405180910390a3505050565b6001600160a01b0383166109405760405162461bcd60e51b81526004016103ca9061111d565b6001600160a01b0382166109665760405162461bcd60e51b81526004016103ca90610ea9565b610971838383610607565b6001600160a01b038316600090815260208190526040902054818110156109aa5760405162461bcd60e51b81526004016103ca90610fa7565b6109b48282611211565b6001600160a01b0380861660009081526020819052604080822093909355908516815290812080548492906109ea9084906111f9565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a349190610dfb565b60405180910390a350505050565b6001600160a01b038216610a685760405162461bcd60e51b81526004016103ca906110dc565b610a7482600083610607565b6001600160a01b03821660009081526020819052604090205481811015610aad5760405162461bcd60e51b81526004016103ca90610eec565b610ab78282611211565b6001600160a01b03841660009081526020819052604081209190915560028054849290610ae5908490611211565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061090d908690610dfb565b60008060055486604051602001610b40929190610dd5565b604051602081830303815290604052805190602001209050600060018287878760405160008152602001604052604051610b7d9493929190610e38565b6020604051602081039080840390855afa158015610b9f573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590610bd55750876001600160a01b0316816001600160a01b0316145b98975050505050505050565b600080610bed86610c14565b9050600060018287878760405160008152602001604052604051610b7d9493929190610e38565b600060055482604051602001610c2b929190610d9f565b604051602081830303815290604052805190602001209050919050565b80356001600160a01b03811681146105b257600080fd5b600060208284031215610c70578081fd5b610c7982610c48565b9392505050565b60008060408385031215610c92578081fd5b610c9b83610c48565b9150610ca960208401610c48565b90509250929050565b600080600060608486031215610cc6578081fd5b610ccf84610c48565b9250610cdd60208501610c48565b9150604084013590509250925092565b600080600080600080600060e0888a031215610d07578283fd5b610d1088610c48565b9650610d1e60208901610c48565b95506040880135945060608801359350608088013560ff81168114610d41578384fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610d70578182fd5b610d7983610c48565b946020939093013593505050565b600060208284031215610d98578081fd5b5035919050565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810192909252603c820152605c0190565b61190160f01b81526002810192909252602282015260420190565b901515815260200190565b90815260200190565b9586526001600160a01b0394851660208701529290931660408501526060840152608083019190915260a082015260c00190565b93845260ff9290921660208401526040830152606082015260800190565b6000602080835283518082850152825b81811015610e8257858101830151858201604001528201610e66565b81811115610e935783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601c908201527f556e697377617056323a20494e56414c49445f5349474e415455524500000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b602080825260129082015271155b9a5cddd85c158c8e881156141254915160721b604082015260600190565b6020808252601e908201527f416e7973776170563345524332303a2045787069726564207065726d69740000604082015260600190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526024908201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604082015263616e636560e01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b60ff91909116815260200190565b6000821982111561120c5761120c61127e565b500190565b6000828210156112235761122361127e565b500390565b60028104600182168061123c57607f821691505b6020821081141561125d57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156112775761127761127e565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220710426932f7559b94d5dccfe7e30be9094d0af180510cc18f2e12dd7e2d1a54464736f6c63430008000033",
  "devdoc": {
    "author": "Eman Herawy, StartFi Team",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "details": "Sets `value` as allowance of `spender` account over `owner` account's AnyswapV3ERC20 token, given `owner` account's signed approval. Emits {Approval} event. Requirements:   - `deadline` must be timestamp in future.   - `v`, `r` and `s` must be valid `secp256k1` signature from `owner` account over EIP712-formatted function arguments.   - the signature must use `owner` account's current nonce (see {nonces}).   - the signer cannot be zero address and must be `owner` account. For more information on signature format, see https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. AnyswapV3ERC20 token implementation adapted from https://github.com/albertocuestacanada/ERC20Permit/blob/master/contracts/ERC20Permit.sol."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "stateVariables": {
      "nonces": {
        "details": "Records current ERC2612 nonce for account. This value must be included whenever signature is generated for {permit}. Every successful call to {permit} increases account's nonce by one. This prevents signature from being used multiple times."
      }
    },
    "title": "Start FiToken. [ desc ] : A Startfi Utiltiy token",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 775,
        "contract": "contracts/StartFiToken.sol:StartFiToken",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 781,
        "contract": "contracts/StartFiToken.sol:StartFiToken",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 783,
        "contract": "contracts/StartFiToken.sol:StartFiToken",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 785,
        "contract": "contracts/StartFiToken.sol:StartFiToken",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 787,
        "contract": "contracts/StartFiToken.sol:StartFiToken",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 7451,
        "contract": "contracts/StartFiToken.sol:StartFiToken",
        "label": "DOMAIN_SEPARATOR",
        "offset": 0,
        "slot": "5",
        "type": "t_bytes32"
      },
      {
        "astId": 7466,
        "contract": "contracts/StartFiToken.sol:StartFiToken",
        "label": "nonces",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}